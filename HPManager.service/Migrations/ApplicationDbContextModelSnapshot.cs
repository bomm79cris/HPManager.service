// <auto-generated />
using System;
using HPManager.service.Infrastructure.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HPManager.service.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Cita", b =>
                {
                    b.Property<long>("CitaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CitaID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("EstadoID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PsicologoID")
                        .HasColumnType("bigint");

                    b.Property<long>("UsuarioID")
                        .HasColumnType("bigint");

                    b.HasKey("CitaID");

                    b.HasIndex("EstadoID");

                    b.HasIndex("PsicologoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Comportamiento", b =>
                {
                    b.Property<long>("ComportamientoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ComportamientoID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DocenteID")
                        .HasColumnType("bigint");

                    b.Property<long>("EstudianteID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ComportamientoID");

                    b.HasIndex("DocenteID");

                    b.HasIndex("EstudianteID");

                    b.ToTable("Comportamiento");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Docente", b =>
                {
                    b.Property<long>("DocenteID")
                        .HasColumnType("bigint");

                    b.Property<string>("Asignatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocenteID");

                    b.ToTable("Docentes");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.EstadoCita", b =>
                {
                    b.Property<long>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EstadoId"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoId");

                    b.ToTable("EstadosCitas");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.EstadoTratamiento", b =>
                {
                    b.Property<long>("EstadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EstadoID"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoID");

                    b.ToTable("EstadosTratamientos");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Estudiante", b =>
                {
                    b.Property<long>("EstudianteID")
                        .HasColumnType("bigint");

                    b.Property<string>("Grado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstudianteID");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Observacion", b =>
                {
                    b.Property<long>("ObservacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ObservacionID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UsuarioID")
                        .HasColumnType("bigint");

                    b.HasKey("ObservacionID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Observaciones");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.PadreDeFamilia", b =>
                {
                    b.Property<long>("PadreID")
                        .HasColumnType("bigint");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PadreID");

                    b.ToTable("PadresFamilia");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Psicologo", b =>
                {
                    b.Property<long>("PsicologoID")
                        .HasColumnType("bigint");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PsicologoID");

                    b.ToTable("Psicologos");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Recomendation", b =>
                {
                    b.Property<long>("RecomendacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecomendacionID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DocenteID")
                        .HasColumnType("bigint");

                    b.Property<long>("EstudianteID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<long>("PsicologoID")
                        .HasColumnType("bigint");

                    b.Property<string>("Recomendacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecomendacionID");

                    b.HasIndex("DocenteID");

                    b.HasIndex("EstudianteID");

                    b.HasIndex("PsicologoID");

                    b.ToTable("Recomendaciones");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.RolUsuario", b =>
                {
                    b.Property<long>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RolId"));

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("RolesUsuarios");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Sesion", b =>
                {
                    b.Property<long>("SesionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SesionID"));

                    b.Property<string>("AspectosAMejorar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("ObjetivoAlcanzado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PsicologoID")
                        .HasColumnType("bigint");

                    b.Property<long>("UsuarioID")
                        .HasColumnType("bigint");

                    b.HasKey("SesionID");

                    b.HasIndex("PsicologoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Sesiones");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Tratamiento", b =>
                {
                    b.Property<long>("TratamientoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TratamientoID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EstadoID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<long>("UsuarioID")
                        .HasColumnType("bigint");

                    b.HasKey("TratamientoID");

                    b.HasIndex("EstadoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Tratamientos");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Usuario", b =>
                {
                    b.Property<long>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UsuarioId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RolId")
                        .HasColumnType("bigint");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Cita", b =>
                {
                    b.HasOne("HPManager.service.Infrastructure.Models.EstadoCita", "EstadoCita")
                        .WithMany("Citas")
                        .HasForeignKey("EstadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HPManager.service.Infrastructure.Models.Psicologo", "Psicologo")
                        .WithMany("Citas")
                        .HasForeignKey("PsicologoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HPManager.service.Infrastructure.Models.Usuario", "Usuario")
                        .WithMany("Citas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoCita");

                    b.Navigation("Psicologo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Comportamiento", b =>
                {
                    b.HasOne("HPManager.service.Infrastructure.Models.Docente", "Docente")
                        .WithMany("Comportamientos")
                        .HasForeignKey("DocenteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HPManager.service.Infrastructure.Models.Estudiante", "Estudiante")
                        .WithMany("Comportamientos")
                        .HasForeignKey("EstudianteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Docente");

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Docente", b =>
                {
                    b.HasOne("HPManager.service.Infrastructure.Models.Usuario", "Usuario")
                        .WithMany("Docentes")
                        .HasForeignKey("DocenteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Estudiante", b =>
                {
                    b.HasOne("HPManager.service.Infrastructure.Models.Usuario", "Usuario")
                        .WithMany("Estudiantes")
                        .HasForeignKey("EstudianteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Observacion", b =>
                {
                    b.HasOne("HPManager.service.Infrastructure.Models.Usuario", "Usuario")
                        .WithMany("Observaciones")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.PadreDeFamilia", b =>
                {
                    b.HasOne("HPManager.service.Infrastructure.Models.Usuario", "Usuario")
                        .WithMany("PadresDeFamilia")
                        .HasForeignKey("PadreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Psicologo", b =>
                {
                    b.HasOne("HPManager.service.Infrastructure.Models.Usuario", "Usuario")
                        .WithMany("Psicologos")
                        .HasForeignKey("PsicologoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Recomendation", b =>
                {
                    b.HasOne("HPManager.service.Infrastructure.Models.Docente", "Docente")
                        .WithMany("Recomendaciones")
                        .HasForeignKey("DocenteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HPManager.service.Infrastructure.Models.Estudiante", "Estudiante")
                        .WithMany("Recomendaciones")
                        .HasForeignKey("EstudianteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HPManager.service.Infrastructure.Models.Psicologo", "Psicologo")
                        .WithMany("Recomendaciones")
                        .HasForeignKey("PsicologoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Docente");

                    b.Navigation("Estudiante");

                    b.Navigation("Psicologo");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Sesion", b =>
                {
                    b.HasOne("HPManager.service.Infrastructure.Models.Psicologo", "Psicologo")
                        .WithMany("Sesiones")
                        .HasForeignKey("PsicologoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HPManager.service.Infrastructure.Models.Usuario", "Usuario")
                        .WithMany("Sesiones")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Psicologo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Tratamiento", b =>
                {
                    b.HasOne("HPManager.service.Infrastructure.Models.EstadoTratamiento", "EstadoTratamiento")
                        .WithMany("Tratamientos")
                        .HasForeignKey("EstadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HPManager.service.Infrastructure.Models.Usuario", "Usuario")
                        .WithMany("Tratamientos")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoTratamiento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Usuario", b =>
                {
                    b.HasOne("HPManager.service.Infrastructure.Models.RolUsuario", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Docente", b =>
                {
                    b.Navigation("Comportamientos");

                    b.Navigation("Recomendaciones");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.EstadoCita", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.EstadoTratamiento", b =>
                {
                    b.Navigation("Tratamientos");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Estudiante", b =>
                {
                    b.Navigation("Comportamientos");

                    b.Navigation("Recomendaciones");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Psicologo", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("Recomendaciones");

                    b.Navigation("Sesiones");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.RolUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("HPManager.service.Infrastructure.Models.Usuario", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("Docentes");

                    b.Navigation("Estudiantes");

                    b.Navigation("Observaciones");

                    b.Navigation("PadresDeFamilia");

                    b.Navigation("Psicologos");

                    b.Navigation("Sesiones");

                    b.Navigation("Tratamientos");
                });
#pragma warning restore 612, 618
        }
    }
}
